#version 450
#extension GL_GOOGLE_include_directive : enable

#define DIMXBIT 1
#define DIMYBIT 2
#define DIMZBIT 4

layout( binding = 0) uniform Informations{
    uint xInd;
    uint yInd;
    uint zInd;
    uint linearDims;

    uint densityAttribute;
    uint amtOfIndices;
    uint amtOfAttributes;
    float xMin;

    float xMax;
    float yMin;
    float yMax;
    float zMin;

    float zMax;
    uint dimX;
    uint dimY;
    uint dimZ;

    float minValue;
    float maxValue;
    int binsAmt;
    int pad;
} info;

layout(std430, binding = 1) buffer IndexBuffer{
    uint ind[];
};

layout(std430, binding = 2) buffer DataBuffer{
    float d[];
}data;

layout(binding = 3, r8 ) uniform writeonly image3D densityImage;

layout(std430, binding = 4) buffer dimVals{
    vec4 dimSizes;
    float values[];
}dims;

layout(std430, binding = 5) buffer B{
    int bins[];
}hist;

layout (local_size_x = 256,local_size_y=1,local_size_z=1) in;

int getVectorIndex(int dim, float v)
{
    //binary search
    int a = 0, b = int(dims.dimSizes[dim]), baseIndex = 0;
    if(dim == 1){
        baseIndex = int(dims.dimSizes.x);
    }
    if(dim == 2){
        baseIndex = int(dims.dimSizes.x + dims.dimSizes.y);
    }
    while (b - a > 1) {
        int h = (b + a) / 2;
        float val = dims.values[baseIndex + h];
        if (v < val)
            b = h;
        else
            a = h;
        if(val == v)
            break;
    }
    //a now at begin index, b at endindex
    return a;
}

#include "dataAccess.glsl"

void main(){
    if(gl_GlobalInvocationID.x >= info.amtOfIndices) return;
    uint i = ind[gl_GlobalInvocationID.x];

    float da = getPackedData(i, info.densityAttribute);
    da = (da - info.minValue) / (info.maxValue - info.minValue);
    if(da < 0 || da > 1) return;

    ivec3 pos;
    if(bool(info.linearDims & DIMXBIT))
        pos.x = int(((getPackedData(i, info.xInd) - info.xMin) / (info.xMax - info.xMin)) * float(info.dimX - 1) + .5f);
    else
        pos.x = getVectorIndex(0, getPackedData(i, info.xInd));
    if(bool(info.linearDims & DIMYBIT))
        pos.y = int(((getPackedData(i, info.yInd) - info.yMin) / (info.yMax - info.yMin)) * float(info.dimY - 1) + .5f);
    else
        pos.y = getVectorIndex(1, getPackedData(i, info.yInd));
    if(bool(info.linearDims & DIMZBIT))
        pos.z = int(((getPackedData(i, info.zInd) - info.zMin) / (info.zMax - info.zMin)) * float(info.dimZ - 1) + .5f);
    else
        pos.z = getVectorIndex(2, getPackedData(i, info.zInd));
    if(pos.x<0||pos.y<0||pos.z<0||pos.x>=info.dimX||pos.y>=info.dimY||pos.z>=info.dimZ) return;

    imageStore(densityImage, pos, vec4(da));
    int bin = int(da * (info.binsAmt - 1) + .5f);
    atomicAdd(hist.bins[bin], 1);
}