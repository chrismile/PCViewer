// code taken from https://github.com/CannyLab/tsne-cuda/blob/main/src/kernels/nbodyfft.cu and converted
// to glsl code for vulkan

#version 450

#include "tsne_common.glsl"

layout(push_constant) uniform PC{
    uint64_t interpolated_values_address;
    uint64_t y_in_box_address;
    uint64_t y_tilde_spacings_address;
    uint64_t denominator_address;
    uint n_interpolation_points;
    uint N;
};

Vec interpolated_values = Vec(interpolated_values_address);
Vec y_in_box            = Vec(y_in_box_address);
Vec y_tilde_spacings    = Vec(y_tilde_spacings_address);
Vec denominator         = Vec(denominator_address);

void main(){
    uint TID, i, j, k;
    float value, ybox_i;

    TID = gl_GlobalInvocationID.x;
    if (TID >= N * n_interpolation_points)
        return;

    i = TID % N;
    j = TID / N;

    value = 1;
    ybox_i = y_in_box.d[i];

    for (k = 0; k < n_interpolation_points; k++)
    {
        if (j != k)
        {
            value *= ybox_i - y_tilde_spacings.d[k];
        }
    }

    interpolated_values.d[j * N + i] = value / denominator.d[j];
}
