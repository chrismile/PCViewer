set(output_file @CMAKE_CURRENT_SOURCE_DIR@/@output_header@)
file(REMOVE ${output_file})
file(WRITE ${output_file} "#pragma once\n")
file(APPEND ${output_file} "#include <array>\n")
file(APPEND ${output_file} "namespace @output_namespace_name@ {\n")
set(binary_files @spriv_binary_files@)
foreach(binary_file IN LISTS binary_files)
    file(READ ${binary_file} binary_content HEX)
    string(LENGTH "${binary_content}" size)
    set(hex_data)
    while(binary_content MATCHES "..")
        string(SUBSTRING ${binary_content} 0 2 val_hex)
        set(hex_data "${hex_data} 0x${val_hex},")
        string(SUBSTRING ${binary_content} 2 -1 binary_content)
    endwhile()

    file(READ ${binary_file} binary_content HEX)
    get_filename_component(shader_name ${binary_file} NAME_WE)
    file(APPEND ${output_file} "const std::array<uint8_t, ${size}/2> ${shader_name}{${hex_data}};\n")
endforeach()
file(APPEND ${output_file} "}\n")