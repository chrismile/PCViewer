#version 450
#extension GL_GOOGLE_include_directive: enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

#include "radix_common.glsl"
#include "scan_common.glsl"

//shared int gs_FFX_PARALLELSORT_LDS[FFX_PARALLELSORT_ELEMENTS_PER_THREAD][FFX_PARALLELSORT_THREADGROUP_SIZE];
void main(){
    // When doing adds, we need to access data differently because reduce 
	// has a more specialized access pattern to match optimized count
	// Access needs to be done similarly to reduce
	// Figure out what bin data we are reducing
	uint BinID = groupID / NumReduceThreadgroupPerBin;
	uint BinOffset = BinID * NumThreadGroups;

	// Get the base index for this thread group
	uint BaseIndex = (groupID % NumReduceThreadgroupPerBin) * FFX_PARALLELSORT_ELEMENTS_PER_THREAD * FFX_PARALLELSORT_THREADGROUP_SIZE;

    FFX_ParallelSort_ScanPrefix(NumThreadGroups, localID, groupID, BinOffset, BaseIndex, true,
								ScanSrc, ScanDst, ScanScratch);
}